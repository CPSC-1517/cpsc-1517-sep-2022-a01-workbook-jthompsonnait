@page "{SearchArg?}"
@model WebApp.Pages.Samples.PartialFilterSearchModel
@{
    ViewData["Title"] = "Partial String Table Query";
}
<h1>Partial String query resulting in a Table Display</h1>

<p>@Model.Feedback</p>

<form method="post">
    <label>
        @*
        The type attribute can be set to different input for acceptable value
        "number" restricts input to numeric
        The numeric are by default whole numbers
        The numeric can be negative or positive
        Additional attributes can be used to refind the acceptable values.
        min="xxx" indicates the minimum acceptable value
        max="xxx" indicates the maximum acceptable value
        step="xxx" indicates the increments of the acceptable values
        step="1" (default) whole number increments of 1 (1,2,3,...)
        step="0.01" decimal numbers increments of .01 (great for dollar amounts)
        required indicates that the field must have a value

        When you use these validation attributes on your form input controls,
        the user MUST meet the validation BEFORE the form is sent to the
        web server for processing

        The attribute formnovalidate overrides any validation (html5) the exist
        on your form controls
        *@
        Enter Region ID:
        <input type="number" asp-for="RegionID"
               placeholder="enter your region id number"
               step="1" required />
    </label>
</form>

<form method="post">
    <label>
        Enter a partial Territory description:
        <input type="text" asp-for="SearchArg"
               placeholder="enter your description" required />
    </label>
    <br />
    @*restrict the display of the table to when there is data to view*@
    @if (Model.TerritoryInfo != null)
    {
        if (Model.TerritoryInfo.Count() == 0)
        {
            <p style="color: blueviolet; font-weight: bold; font-size: large">
                There are no territories matching your search request
            </p>
        }
        else
        {
            <table>
                <thead>
                    @*Used for column titles*@
                    <tr>
                        <th>Territory ID</th>
                        <th>Name</th>
                        <th>Region</th>
                    </tr>
                </thead>
                <tbody>
                    @*Used for the table details
            The number of rows are usually unknown for a database query
            *@
                    @foreach (var item in Model.TerritoryInfo)
                    {
                        <tr>
                            @*
                This example will send the TerritoryID to
                another page.
                Use the anchor tag to accomplish this task
                The href page value MUST be reference from the Page folder
                The value to be passed is attached to the end of the page reference
                In this example, the value will be passed to the receiving page as a routing parameter
                You can send multiple values to the new page
                The receiving page MUST have the same number of routing parameters as those pass AND the
                    order of the routing paramters is IMPORTANT
                Pager reference syntax: /pathname/value[/value/...]
                The text of your anchor tag DOES NOT need to be the value that is being passed
                
                CHANGE TO REGION ID FOR Receiving Page Example
                *@
                            <td>
                                <a href="/Samples/ReceivingPage/@item.TerritoryID">
                                    Edit this territory
                                </a>
                            </td>
                            <td>@item.TerritoryDescription</td>
                            <td>
                                <select disabled="true">
                                    @foreach (var region in Model.TerritoryInfo)
                                    {
                                        if (region.TerritoryID == item.TerritoryID)
                                        {
                                            <option value="@region.TerritoryID" selected>@region.TerritoryID</option>
                                        }
                                        else
                                        {
                                            <option value="@region.TerritoryID">@region.TerritoryID</option>
                                        }
                                    }
                                </select>
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    @*Used for summary table information eg totals
            used for displaying paging information
            *@
                    <tr>
                        @{
                            //  The pageRef is the string representation of the
                            //      value to be displayed and it's numeric
                            //  The string maybe a character line : Next
                            //  The string maybe a numeric : 4
                            //  FIrst Previous 1 2 3 4 5 Next Last
                            foreach (var pageRef in Model.Pager)
                            {
                                if (pageRef == Model.Pager.CurrentPage)
                                {
                                    <b>@pageRef.Text</b>
                                }
                                else
                                {
                                    //  Create an anchor tag to move to
                                    //    the desired collection page
                                    //  The target of the anchor destination
                                    //      is your current web cshtml
                                    //      tHis will cause a OnGet issue
                                    //  .Page is the numeric representation
                                    //      of the desired page
                                    //  For the asp-page your page name reference
                                    //      MUST be based from the folder name Pages.
                                    <a title="Page @pageRef.Page"
                   asp-page="/Samples/PartialFilterSearch"
                   asp-route-currentpage="@pageRef.Page">
                                        @pageRef.Text
                                    </a>
                                }
                            }
                        }
                    </tr>
                </tfoot>
            </table>
        }
    }
    <button type="submit" asp-page-handler="Fetch">Fetch Territories</button>
    &nbsp; &nbsp;
    <button type="submit" asp-page-handler="Clear" formnovalidate>Clear</button>
</form>
